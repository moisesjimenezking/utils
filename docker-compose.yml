version: '3.3'

services:
  db:
    image: mysql:8.0
    container_name: db_utils
    restart: always
    ports: 
      - "8181:3306"
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    
    volumes:
      - './app/config/database/db:/app/database/db'
      - './app/config/database/db:/var/lib/mysql'
      - './app/config/database/config/my.cnf:/etc/mysql/my.cnf'
    networks:
      - app-utils

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin_utils
    restart: always
    ports:
      - '8180:80'
    env_file:
      - .env

    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    depends_on:
      - db
    networks:
      - app-utils

  flask:
    build: .
    container_name: utils
    restart: always
    env_file:
      - .env
    environment:
      FLASK_ENV: development
      FLASK_APP: run.py
      DB_HOST: db
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    ports:
      - '8182:5000'
    depends_on:
      - db
      # - elasticsearch
    
    volumes:
      - ./app/config/cert:/app/config/cert:rw

    networks:
      - app-utils

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
  #   container_name: elasticsearch_utils
  #   environment:
  #     - discovery.type=single-node
  #     - cluster.name=elastic
  #     - node.name=nodeElastic
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #   ports:
  #     - "9300:9200"
  #   networks:
  #     - app-utils

networks:
  app-utils:

volumes:
  db_data: